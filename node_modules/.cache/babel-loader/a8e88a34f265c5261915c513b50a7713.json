{"ast":null,"code":"import _slicedToArray from \"/home/bex/dash-backup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bex/dash-backup/src/components/cards/InfoCards.js\";\nimport { CardHeader, Card, CardContent, Button, Grid, IconButton, Modal, Fade, Backdrop } from '@material-ui/core/';\nimport React, { useState, useEffect } from 'react';\nimport Searchbar from '../Searchbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { AddCircleOutline, Close } from '@material-ui/icons/';\nimport ModalSelect from '../ModalSelect';\nimport GraficoPizza from '../SimplePieChart';\nvar styles = makeStyles({\n  size: {\n    width: 1245,\n    margin: 20,\n    overflow: \"scroll\"\n  },\n  header: {},\n  closeButton: {\n    textAlign: \"center\"\n  },\n  subheader: {\n    backgroundColor: \"white\",\n    color: \"gray\",\n    textAlign: \"start\"\n  },\n  subCards: {\n    margin: 20,\n    fontSize: \"48px\"\n  },\n  unselected: {\n    height: \"28vh\"\n  }\n});\n\nvar InfoCard = function InfoCard(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      distritos = _useState4[0],\n      setDistritos = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      open = _useState8[0],\n      setOpen = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      type = _useState10[0],\n      setType = _useState10[1];\n\n  var classes = styles();\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function deleteCard() {\n    setSelected(false);\n  }\n\n  useEffect(function () {\n    var esc = sessionStorage.getItem('escolas');\n\n    if (esc) {\n      var array = new Set([]);\n      JSON.parse(esc).forEach(function (escola) {\n        array.add(escola.Distrito);\n      });\n      var id = 0; // eslint-disable-next-line\n\n      array = Array.from(array);\n      array = array.map(function (dist) {\n        dist = {\n          id: ++id,\n          distrito: dist\n        };\n        return dist;\n      });\n      setDistritos(array);\n      if (data.length <= 0 && !data) setData(JSON.parse(esc));\n    }\n  }, [open]);\n  return React.createElement(Card, {\n    className: classes.size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        alignSelf: \"center\"\n      },\n      item: true,\n      xs: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, selected ? data['Escola'] : \"Escolha um card para exibir\")), React.createElement(Grid, {\n      item: true,\n      style: {\n        textAlign: \"end\"\n      },\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"default\",\n      onClick: function onClick() {\n        return deleteCard();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))))),\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, selected ? React.createElement(Fade, {\n    in: selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, type === \"cards\" ? React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.subCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Alunos Implantados\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, data['Alunos em que foram implantados'])), React.createElement(Card, {\n    className: classes.subCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"V\\xEDdeos Assistidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, data['Vídeos assistidos'])), React.createElement(Card, {\n    className: classes.subCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Quest\\xF5es Respondidas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, data['Questões respondidas']))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(GraficoPizza, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))) : React.createElement(Grid, {\n    className: classes.unselected,\n    container: true,\n    alignContent: \"center\",\n    style: {\n      border: \"solid thick gray\",\n      borderStyle: \"dashed\"\n    },\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Fade, {\n    in: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(ModalSelect, {\n    setType: setType,\n    setSelected: setSelected,\n    setData: setData,\n    distritos: distritos,\n    open: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(IconButton, {\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(AddCircleOutline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })))));\n};\n\nexport default InfoCard;","map":{"version":3,"sources":["/home/bex/dash-backup/src/components/cards/InfoCards.js"],"names":["CardHeader","Card","CardContent","Button","Grid","IconButton","Modal","Fade","Backdrop","React","useState","useEffect","Searchbar","makeStyles","AddCircleOutline","Close","ModalSelect","GraficoPizza","styles","size","width","margin","overflow","header","closeButton","textAlign","subheader","backgroundColor","color","subCards","fontSize","unselected","height","InfoCard","props","data","setData","distritos","setDistritos","selected","setSelected","open","setOpen","type","setType","classes","handleClose","deleteCard","esc","sessionStorage","getItem","array","Set","JSON","parse","forEach","escola","add","Distrito","id","Array","from","map","dist","distrito","length","alignSelf","border","borderStyle","timeout"],"mappings":"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","sourcesContent":["import { CardHeader, Card, CardContent, Button, Grid, IconButton, Modal, Fade, Backdrop } from '@material-ui/core/'\nimport React, { useState, useEffect } from 'react'\nimport Searchbar from '../Searchbar'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { AddCircleOutline, Close } from '@material-ui/icons/'\nimport ModalSelect from '../ModalSelect'\nimport GraficoPizza from '../SimplePieChart'\n\nconst styles = makeStyles({\n    size: {\n        width: 1245,\n        margin: 20,\n        overflow: \"scroll\",\n\n    },\n    header: {\n\n    },\n    closeButton: {\n        textAlign: \"center\"\n    },\n    subheader: {\n        backgroundColor: \"white\",\n        color: \"gray\",\n        textAlign: \"start\"\n    },\n    subCards: {\n        margin: 20,\n        fontSize: \"48px\"\n\n    },\n    unselected: {\n        height: \"28vh\",\n    },\n})\n\nconst InfoCard = (props) => {\n\n    const [data, setData] = useState({})\n    const [distritos, setDistritos] = useState([])\n    const [selected, setSelected] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [type, setType] = useState(\"\")\n    const classes = styles()\n\n    function handleClose() {\n        setOpen(false)\n    }\n    function deleteCard() {\n        setSelected(false)\n    }\n\n    useEffect(() => {\n        const esc = sessionStorage.getItem('escolas')\n        if (esc) {\n            let array = new Set([])\n            JSON.parse(esc).forEach(escola => {\n                array.add(escola.Distrito)\n            })\n            let id = 0\n            // eslint-disable-next-line\n            array = Array.from(array)\n            array = array.map(dist => {\n                dist = { id: ++id, distrito: dist }\n                return dist\n            })\n            setDistritos(array)\n            if (data.length <= 0 && !data) setData(JSON.parse(esc))\n        }\n    }, [open])\n\n    return (<Card className={classes.size}>\n        <CardHeader\n            title={(\n                <div>\n                    <Grid container direction=\"row\">\n                        <Grid style={{ alignSelf: \"center\" }} item xs=\"11\">\n                            <span>{selected ? data['Escola'] : \"Escolha um card para exibir\"}</span>\n                        </Grid>\n                        <Grid item style={{ textAlign: \"end\" }} xs=\"1\">\n                            <IconButton color=\"default\" onClick={() => deleteCard()}>\n                                <Close></Close>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n            className={classes.header}\n        >\n\n        </CardHeader>\n        <CardContent style={{ textAlign: \"center\", }}>\n            {\n                selected ? (\n\n                    <Fade in={selected}>\n                        {type === \"cards\" ? (\n                            <Grid container justify=\"center\">\n                                <Card className={classes.subCards}>\n                                    <CardHeader title=\"Alunos Implantados\" />\n                                    <CardContent >{data['Alunos em que foram implantados']}</CardContent>\n                                </Card>\n                                <Card className={classes.subCards}>\n                                    <CardHeader title=\"Vídeos Assistidos\" />\n                                    <CardContent >{data['Vídeos assistidos']}</CardContent>\n                                </Card>\n                                <Card className={classes.subCards}>\n                                    <CardHeader title=\"Questões Respondidas\" />\n                                    <CardContent >{data['Questões respondidas']}</CardContent>\n                                </Card>\n                            </Grid>) :\n                            <div>\n                                <GraficoPizza data={data}></GraficoPizza>\n                            </div>\n                        }\n                    </Fade>\n                ) : (\n\n                        <Grid className={classes.unselected} container alignContent=\"center\" style={{ border: \"solid thick gray\", borderStyle: \"dashed\" }} justify=\"center\">\n                            <Modal\n                                aria-labelledby=\"simple-modal-title\"\n                                aria-describedby=\"simple-modal-description\"\n                                open={open}\n                                onClose={handleClose}\n                                closeAfterTransition\n                                BackdropComponent={Backdrop}\n                                BackdropProps={{\n                                    timeout: 500,\n                                }}\n                            >\n                                <Fade in={open}>\n                                    <ModalSelect setType={setType} setSelected={setSelected} setData={setData} distritos={distritos} open={handleClose} />\n                                </Fade>\n                            </Modal>\n\n                            <IconButton onClick={() => setOpen(true)} >\n                                <AddCircleOutline />\n                            </IconButton>\n\n                        </Grid>\n                    )}\n        </CardContent>\n    </Card>)\n}\n\nexport default InfoCard"]},"metadata":{},"sourceType":"module"}