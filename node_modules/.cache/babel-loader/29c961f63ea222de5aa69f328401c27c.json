{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isPlainObject2 = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactSmooth = _interopRequireDefault(require(\"react-smooth\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Layer = _interopRequireDefault(require(\"../container/Layer\"));\n\nvar _Sector = _interopRequireDefault(require(\"../shape/Sector\"));\n\nvar _Curve = _interopRequireDefault(require(\"../shape/Curve\"));\n\nvar _Text = _interopRequireDefault(require(\"../component/Text\"));\n\nvar _Label = _interopRequireDefault(require(\"../component/Label\"));\n\nvar _LabelList = _interopRequireDefault(require(\"../component/LabelList\"));\n\nvar _Cell = _interopRequireDefault(require(\"../component/Cell\"));\n\nvar _ReactUtils = require(\"../util/ReactUtils\");\n\nvar _PolarUtils = require(\"../util/PolarUtils\");\n\nvar _DataUtils = require(\"../util/DataUtils\");\n\nvar _ChartUtils = require(\"../util/ChartUtils\");\n\nvar _LogUtils = require(\"../util/LogUtils\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Pie =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Pie, _PureComponent);\n\n  function Pie() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Pie);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Pie)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isAnimationFinished: false\n    };\n    _this.id = (0, _DataUtils.uniqueId)('recharts-pie-');\n\n    _this.cachePrevData = function (sectors) {\n      _this.setState({\n        prevSectors: sectors\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if ((0, _isFunction2[\"default\"])(onAnimationEnd)) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if ((0, _isFunction2[\"default\"])(onAnimationStart)) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Pie, [{\n    key: \"componentWillReceiveProps\",\n    // eslint-disable-next-line camelcase\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          sectors = _this$props.sectors;\n\n      if (nextProps.isAnimationActive !== this.props.isAnimationActive) {\n        this.cachePrevData([]);\n      } else if (nextProps.animationId !== animationId) {\n        this.cachePrevData(sectors);\n      }\n    }\n  }, {\n    key: \"isActiveIndex\",\n    value: function isActiveIndex(i) {\n      var activeIndex = this.props.activeIndex;\n\n      if (Array.isArray(activeIndex)) {\n        return activeIndex.indexOf(i) !== -1;\n      }\n\n      return i === activeIndex;\n    }\n  }, {\n    key: \"renderLabels\",\n    value: function renderLabels(sectors) {\n      var _this2 = this;\n\n      var isAnimationActive = this.props.isAnimationActive;\n\n      if (isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props2 = this.props,\n          label = _this$props2.label,\n          labelLine = _this$props2.labelLine,\n          dataKey = _this$props2.dataKey,\n          valueKey = _this$props2.valueKey;\n      var pieProps = (0, _ReactUtils.getPresentationAttributes)(this.props);\n      var customLabelProps = (0, _ReactUtils.getPresentationAttributes)(label);\n      var customLabelLineProps = (0, _ReactUtils.getPresentationAttributes)(labelLine);\n      var offsetRadius = label && label.offsetRadius || 20;\n      var labels = sectors.map(function (entry, i) {\n        var midAngle = (entry.startAngle + entry.endAngle) / 2;\n        var endPoint = (0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius + offsetRadius, midAngle);\n\n        var labelProps = _objectSpread({}, pieProps, {}, entry, {\n          stroke: 'none'\n        }, customLabelProps, {\n          index: i,\n          textAnchor: _this2.constructor.getTextAnchor(endPoint.x, entry.cx)\n        }, endPoint);\n\n        var lineProps = _objectSpread({}, pieProps, {}, entry, {\n          fill: 'none',\n          stroke: entry.fill\n        }, customLabelLineProps, {\n          index: i,\n          points: [(0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius, midAngle), endPoint],\n          key: 'line'\n        });\n\n        var realDataKey = dataKey; // TODO: compatible to lower versions\n\n        if ((0, _isNil2[\"default\"])(dataKey) && (0, _isNil2[\"default\"])(valueKey)) {\n          realDataKey = 'value';\n        } else if ((0, _isNil2[\"default\"])(dataKey)) {\n          realDataKey = valueKey;\n        }\n\n        return (// eslint-disable-next-line react/no-array-index-key\n          _react[\"default\"].createElement(_Layer[\"default\"], {\n            key: \"label-\".concat(i)\n          }, labelLine && _this2.constructor.renderLabelLineItem(labelLine, lineProps), _this2.constructor.renderLabelItem(label, labelProps, (0, _ChartUtils.getValueByDataKey)(entry, realDataKey)))\n        );\n      });\n      return _react[\"default\"].createElement(_Layer[\"default\"], {\n        className: \"recharts-pie-labels\"\n      }, labels);\n    }\n  }, {\n    key: \"renderSectorsStatically\",\n    value: function renderSectorsStatically(sectors) {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          activeShape = _this$props3.activeShape,\n          blendStroke = _this$props3.blendStroke;\n      return sectors.map(function (entry, i) {\n        var sectorOptions = _this3.isActiveIndex(i) ? activeShape : null;\n\n        var sectorProps = _objectSpread({}, entry, {\n          stroke: blendStroke ? entry.fill : entry.stroke\n        });\n\n        return _react[\"default\"].createElement(_Layer[\"default\"], _extends({\n          className: \"recharts-pie-sector\"\n        }, (0, _ReactUtils.filterEventsOfChild)(_this3.props, entry, i), {\n          key: \"sector-\".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }), _this3.constructor.renderSectorItem(sectorOptions, sectorProps));\n      });\n    }\n  }, {\n    key: \"renderSectorsWithAnimation\",\n    value: function renderSectorsWithAnimation() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          sectors = _this$props4.sectors,\n          isAnimationActive = _this$props4.isAnimationActive,\n          animationBegin = _this$props4.animationBegin,\n          animationDuration = _this$props4.animationDuration,\n          animationEasing = _this$props4.animationEasing,\n          animationId = _this$props4.animationId;\n      var prevSectors = this.state.prevSectors;\n      return _react[\"default\"].createElement(_reactSmooth[\"default\"], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: \"pie-\".concat(animationId),\n        onAnimationStart: this.handleAnimationStart,\n        onAnimationEnd: this.handleAnimationEnd\n      }, function (_ref) {\n        var t = _ref.t;\n        var stepData = [];\n        var first = sectors && sectors[0];\n        var curAngle = first.startAngle;\n        sectors.forEach(function (entry, index) {\n          var prev = prevSectors && prevSectors[index];\n          var paddingAngle = index > 0 ? (0, _get2[\"default\"])(entry, 'paddingAngle', 0) : 0;\n\n          if (prev) {\n            var angleIp = (0, _DataUtils.interpolateNumber)(prev.endAngle - prev.startAngle, entry.endAngle - entry.startAngle);\n\n            var latest = _objectSpread({}, entry, {\n              startAngle: curAngle + paddingAngle,\n              endAngle: curAngle + angleIp(t) + paddingAngle\n            });\n\n            stepData.push(latest);\n            curAngle = latest.endAngle;\n          } else {\n            var endAngle = entry.endAngle,\n                startAngle = entry.startAngle;\n            var interpolatorAngle = (0, _DataUtils.interpolateNumber)(0, endAngle - startAngle);\n            var deltaAngle = interpolatorAngle(t);\n\n            var _latest = _objectSpread({}, entry, {\n              startAngle: curAngle + paddingAngle,\n              endAngle: curAngle + deltaAngle + paddingAngle\n            });\n\n            stepData.push(_latest);\n            curAngle = _latest.endAngle;\n          }\n        });\n        return _react[\"default\"].createElement(_Layer[\"default\"], null, _this4.renderSectorsStatically(stepData));\n      });\n    }\n  }, {\n    key: \"renderSectors\",\n    value: function renderSectors() {\n      var _this$props5 = this.props,\n          sectors = _this$props5.sectors,\n          isAnimationActive = _this$props5.isAnimationActive;\n      var prevSectors = this.state.prevSectors;\n\n      if (isAnimationActive && sectors && sectors.length && (!prevSectors || !(0, _isEqual2[\"default\"])(prevSectors, sectors))) {\n        return this.renderSectorsWithAnimation();\n      }\n\n      return this.renderSectorsStatically(sectors);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          hide = _this$props6.hide,\n          sectors = _this$props6.sectors,\n          className = _this$props6.className,\n          label = _this$props6.label,\n          cx = _this$props6.cx,\n          cy = _this$props6.cy,\n          innerRadius = _this$props6.innerRadius,\n          outerRadius = _this$props6.outerRadius,\n          isAnimationActive = _this$props6.isAnimationActive,\n          prevSectors = _this$props6.prevSectors;\n\n      if (hide || !sectors || !sectors.length || !(0, _DataUtils.isNumber)(cx) || !(0, _DataUtils.isNumber)(cy) || !(0, _DataUtils.isNumber)(innerRadius) || !(0, _DataUtils.isNumber)(outerRadius)) {\n        return null;\n      }\n\n      var layerClass = (0, _classnames[\"default\"])('recharts-pie', className);\n      return _react[\"default\"].createElement(_Layer[\"default\"], {\n        className: layerClass\n      }, this.renderSectors(), label && this.renderLabels(sectors), _Label[\"default\"].renderCallByParent(this.props, null, false), (!isAnimationActive || prevSectors && (0, _isEqual2[\"default\"])(prevSectors, sectors)) && _LabelList[\"default\"].renderCallByParent(this.props, sectors, false));\n    }\n  }], [{\n    key: \"getTextAnchor\",\n    value: function getTextAnchor(x, cx) {\n      if (x > cx) {\n        return 'start';\n      }\n\n      if (x < cx) {\n        return 'end';\n      }\n\n      return 'middle';\n    }\n  }, {\n    key: \"renderLabelLineItem\",\n    value: function renderLabelLineItem(option, props) {\n      if (_react[\"default\"].isValidElement(option)) {\n        return _react[\"default\"].cloneElement(option, props);\n      }\n\n      if ((0, _isFunction2[\"default\"])(option)) {\n        return option(props);\n      }\n\n      return _react[\"default\"].createElement(_Curve[\"default\"], _extends({}, props, {\n        type: \"linear\",\n        className: \"recharts-pie-label-line\"\n      }));\n    }\n  }, {\n    key: \"renderLabelItem\",\n    value: function renderLabelItem(option, props, value) {\n      if (_react[\"default\"].isValidElement(option)) {\n        return _react[\"default\"].cloneElement(option, props);\n      }\n\n      var label = value;\n\n      if ((0, _isFunction2[\"default\"])(option)) {\n        label = option(props);\n\n        if (_react[\"default\"].isValidElement(label)) {\n          return label;\n        }\n      }\n\n      return _react[\"default\"].createElement(_Text[\"default\"], _extends({}, props, {\n        alignmentBaseline: \"middle\",\n        className: \"recharts-pie-label-text\"\n      }), label);\n    }\n  }, {\n    key: \"renderSectorItem\",\n    value: function renderSectorItem(option, props) {\n      if (_react[\"default\"].isValidElement(option)) {\n        return _react[\"default\"].cloneElement(option, props);\n      }\n\n      if ((0, _isFunction2[\"default\"])(option)) {\n        return option(props);\n      }\n\n      if ((0, _isPlainObject2[\"default\"])(option)) {\n        return _react[\"default\"].createElement(_Sector[\"default\"], _extends({}, props, option));\n      }\n\n      return _react[\"default\"].createElement(_Sector[\"default\"], props);\n    }\n  }]);\n\n  return Pie;\n}(_react.PureComponent);\n\nPie.displayName = 'Pie';\nPie.propTypes = _objectSpread({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {}, _ReactUtils.EVENT_ATTRIBUTES, {\n  className: _propTypes[\"default\"].string,\n  animationId: _propTypes[\"default\"].number,\n  cx: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  cy: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  startAngle: _propTypes[\"default\"].number,\n  endAngle: _propTypes[\"default\"].number,\n  paddingAngle: _propTypes[\"default\"].number,\n  innerRadius: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  outerRadius: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  cornerRadius: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  dataKey: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number, _propTypes[\"default\"].func]).isRequired,\n  nameKey: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number, _propTypes[\"default\"].func]),\n  valueKey: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number, _propTypes[\"default\"].func]),\n  data: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n  blendStroke: _propTypes[\"default\"].bool,\n  minAngle: _propTypes[\"default\"].number,\n  legendType: _propTypes[\"default\"].oneOf(_ReactUtils.LEGEND_TYPES),\n  tooltipType: _propTypes[\"default\"].oneOf(_ReactUtils.TOOLTIP_TYPES),\n  maxRadius: _propTypes[\"default\"].number,\n  sectors: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n  hide: _propTypes[\"default\"].bool,\n  labelLine: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].func, _propTypes[\"default\"].element, _propTypes[\"default\"].bool]),\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].shape({\n    offsetRadius: _propTypes[\"default\"].number\n  }), _propTypes[\"default\"].func, _propTypes[\"default\"].element, _propTypes[\"default\"].bool]),\n  activeShape: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].func, _propTypes[\"default\"].element]),\n  activeIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].number)]),\n  onAnimationStart: _propTypes[\"default\"].func,\n  onAnimationEnd: _propTypes[\"default\"].func,\n  isAnimationActive: _propTypes[\"default\"].bool,\n  animationBegin: _propTypes[\"default\"].number,\n  animationDuration: _propTypes[\"default\"].number,\n  animationEasing: _propTypes[\"default\"].oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'spring', 'linear']),\n  id: _propTypes[\"default\"].string\n});\nPie.defaultProps = {\n  stroke: '#fff',\n  fill: '#808080',\n  legendType: 'rect',\n  // The abscissa of pole\n  cx: '50%',\n  // The ordinate of pole\n  cy: '50%',\n  // The start angle of first sector\n  startAngle: 0,\n  // The direction of drawing sectors\n  endAngle: 360,\n  // The inner radius of sectors\n  innerRadius: 0,\n  // The outer radius of sectors\n  outerRadius: '80%',\n  paddingAngle: 0,\n  labelLine: true,\n  hide: false,\n  minAngle: 0,\n  isAnimationActive: !(0, _ReactUtils.isSsr)(),\n  animationBegin: 400,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  nameKey: 'name',\n  // Match each sector's stroke color to it's fill color\n  blendStroke: false\n};\n\nPie.parseDeltaAngle = function (_ref2) {\n  var startAngle = _ref2.startAngle,\n      endAngle = _ref2.endAngle;\n  var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);\n  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n  return sign * deltaAngle;\n};\n\nPie.getRealPieData = function (item) {\n  var _item$props = item.props,\n      data = _item$props.data,\n      children = _item$props.children;\n  var presentationProps = (0, _ReactUtils.getPresentationAttributes)(item.props);\n  var cells = (0, _ReactUtils.findAllByType)(children, _Cell[\"default\"]);\n\n  if (data && data.length) {\n    return data.map(function (entry, index) {\n      return _objectSpread({\n        payload: entry\n      }, presentationProps, {}, entry, {}, cells && cells[index] && cells[index].props);\n    });\n  }\n\n  if (cells && cells.length) {\n    return cells.map(function (cell) {\n      return _objectSpread({}, presentationProps, {}, cell.props);\n    });\n  }\n\n  return [];\n};\n\nPie.parseCoordinateOfPie = function (item, offset) {\n  var top = offset.top,\n      left = offset.left,\n      width = offset.width,\n      height = offset.height;\n  var maxPieRadius = (0, _PolarUtils.getMaxRadius)(width, height);\n  var cx = left + (0, _DataUtils.getPercentValue)(item.props.cx, width, width / 2);\n  var cy = top + (0, _DataUtils.getPercentValue)(item.props.cy, height, height / 2);\n  var innerRadius = (0, _DataUtils.getPercentValue)(item.props.innerRadius, maxPieRadius, 0);\n  var outerRadius = (0, _DataUtils.getPercentValue)(item.props.outerRadius, maxPieRadius, maxPieRadius * 0.8);\n  var maxRadius = item.props.maxRadius || Math.sqrt(width * width + height * height) / 2;\n  return {\n    cx: cx,\n    cy: cy,\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    maxRadius: maxRadius\n  };\n};\n\nPie.getComposedData = function (_ref3) {\n  var item = _ref3.item,\n      offset = _ref3.offset,\n      onItemMouseLeave = _ref3.onItemMouseLeave,\n      onItemMouseEnter = _ref3.onItemMouseEnter;\n  var pieData = Pie.getRealPieData(item);\n\n  if (!pieData || !pieData.length) {\n    return [];\n  }\n\n  var _item$props2 = item.props,\n      cornerRadius = _item$props2.cornerRadius,\n      startAngle = _item$props2.startAngle,\n      endAngle = _item$props2.endAngle,\n      paddingAngle = _item$props2.paddingAngle,\n      dataKey = _item$props2.dataKey,\n      nameKey = _item$props2.nameKey,\n      valueKey = _item$props2.valueKey,\n      tooltipType = _item$props2.tooltipType;\n  var minAngle = Math.abs(item.props.minAngle);\n  var coordinate = Pie.parseCoordinateOfPie(item, offset);\n  var len = pieData.length;\n  var deltaAngle = Pie.parseDeltaAngle({\n    startAngle: startAngle,\n    endAngle: endAngle\n  });\n  var absDeltaAngle = Math.abs(deltaAngle);\n  var totalPadingAngle = (absDeltaAngle >= 360 ? len : len - 1) * paddingAngle;\n  var realTotalAngle = absDeltaAngle - len * minAngle - totalPadingAngle;\n  var realDataKey = dataKey;\n\n  if ((0, _isNil2[\"default\"])(dataKey) && (0, _isNil2[\"default\"])(valueKey)) {\n    (0, _LogUtils.warn)(false, \"Use \\\"dataKey\\\" to specify the value of pie,\\n      the props \\\"valueKey\\\" will be deprecated in 1.1.0\");\n    realDataKey = 'value';\n  } else if ((0, _isNil2[\"default\"])(dataKey)) {\n    (0, _LogUtils.warn)(false, \"Use \\\"dataKey\\\" to specify the value of pie,\\n      the props \\\"valueKey\\\" will be deprecated in 1.1.0\");\n    realDataKey = valueKey;\n  }\n\n  var sum = pieData.reduce(function (result, entry) {\n    var val = (0, _ChartUtils.getValueByDataKey)(entry, realDataKey, 0);\n    return result + ((0, _DataUtils.isNumber)(val) ? val : 0);\n  }, 0);\n  var sectors;\n\n  if (sum > 0) {\n    var prev;\n    sectors = pieData.map(function (entry, i) {\n      var val = (0, _ChartUtils.getValueByDataKey)(entry, realDataKey, 0);\n      var name = (0, _ChartUtils.getValueByDataKey)(entry, nameKey, i);\n      var percent = ((0, _DataUtils.isNumber)(val) ? val : 0) / sum;\n      var tempStartAngle;\n\n      if (i) {\n        tempStartAngle = prev.endAngle + (0, _DataUtils.mathSign)(deltaAngle) * paddingAngle;\n      } else {\n        tempStartAngle = startAngle;\n      }\n\n      var tempEndAngle = tempStartAngle + (0, _DataUtils.mathSign)(deltaAngle) * (minAngle + percent * realTotalAngle);\n      var midAngle = (tempStartAngle + tempEndAngle) / 2;\n      var middleRadius = (coordinate.innerRadius + coordinate.outerRadius) / 2;\n      var tooltipPayload = [{\n        name: name,\n        value: val,\n        payload: entry,\n        dataKey: realDataKey,\n        type: tooltipType\n      }];\n      var tooltipPosition = (0, _PolarUtils.polarToCartesian)(coordinate.cx, coordinate.cy, middleRadius, midAngle);\n      prev = _objectSpread({\n        percent: percent,\n        cornerRadius: cornerRadius,\n        name: name,\n        tooltipPayload: tooltipPayload,\n        midAngle: midAngle,\n        middleRadius: middleRadius,\n        tooltipPosition: tooltipPosition\n      }, entry, {}, coordinate, {\n        value: (0, _ChartUtils.getValueByDataKey)(entry, realDataKey),\n        startAngle: tempStartAngle,\n        endAngle: tempEndAngle,\n        payload: entry,\n        paddingAngle: (0, _DataUtils.mathSign)(deltaAngle) * paddingAngle\n      });\n      return prev;\n    });\n  }\n\n  return _objectSpread({}, coordinate, {\n    sectors: sectors,\n    data: pieData,\n    onMouseLeave: onItemMouseLeave,\n    onMouseEnter: onItemMouseEnter\n  });\n};\n\nvar _default = Pie;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}